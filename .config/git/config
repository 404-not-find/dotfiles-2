[user]
    name  = Marco Hinz
    email = mh.codebro@gmail.com

[core]
    editor       = vim
    excludesfile = ~/.config/git/ignore
    autocrlf     = false
    filemode     = false

[init]
    templatedir = ~/.config/git/template

[fetch]
    prune = true

[push]
    default = simple

[rebase]
    autosquash = true
    autostash  = true

[rerere]
    enabled = true

[diff]
    tool                = vimdiff
    mnemonicPrefix      = true
    compactionHeuristic = true

[difftool "accu"]
    cmd = "vim -c 'call mergeutil#accurev()' \"$BASE\" \"$REMOTE\" \"$LOCAL\" \"$MERGED\""

[merge]
    tool          = vimdiff
    conflictstyle = diff3

[mergetool "accu"]
    cmd           = "vim -c 'call mergeutil#accurev()' \"$BASE\" \"$REMOTE\" \"$LOCAL\" \"$MERGED\""
    trustExitCode = true

[pager]
    diff = diff-so-fancy | less -RFXx1,5
    log  = diff-so-fancy | less -RFXx1,5
    show = diff-so-fancy | less -RFXx1,5

[interactive]
    diffFilter = diff-so-fancy

[alias]
    a     = add
    app   = appraise
    au    = add -u
    b     = branch
    bc    = branch --contains
    bi    = bisect
    bl    = blame
    c     = commit
    ca    = commit --amend
    cl    = clone
    co    = checkout
    cp    = cherry-pick
    d     = diff --color --no-ext-diff
    dw    = diff --color --no-ext-diff --word-diff=color
    dc    = describe --contains
    dc    = diff --color --no-ext-diff --cached
    dcs   = diff --color --no-ext-diff --stat --cached
    ds    = diff --color --no-ext-diff --stat
    dt    = difftool
    f     = fetch
    fp    = format-patch
    g     = grep
    h     = help
    l     = log --graph --pretty='%C(242)%h  %C(156)%s  %C(242)[%C(248)%an%C(242), %C(248)%ar%C(242)]%C(222)%d' --decorate --date=relative
    la    = log --graph --pretty='%C(242)%h  %C(156)%s  %C(242)[%C(248)%an%C(242), %C(248)%ar%C(242)]%C(222)%d' --decorate --date=relative --all
    lfp   = log --graph --pretty='%C(242)%h  %C(156)%s  %C(242)[%C(248)%an%C(242), %C(248)%ar%C(242)]%C(222)%d' --decorate --date=relative --first-parent
    lso   = ls-files --others --exclude-standard
    lsr   = ls-remote
    m     = merge
    ma    = merge --abort
    n     = name-rev --name-only
    p     = push
    pl    = pull --ff-only
    r     = reset
    ra    = rebase --abort
    rank  = shortlog -sn --no-merges
    rc    = rebase --continue
    re    = rebase
    rem   = remote
    ri    = rebase -i
    rl    = rev-list
    rp    = rev-parse
    ru    = remote update
    rs    = rebase --skip
    s     = status -sb -uno
    sb    = show-branch
    sbt   = show-branch --topics HEAD
    sh    = show
    shs   = show --stat
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    st    = stash
    stl   = stash list
    sts   = stash show -p
    t     = tag
    unmerged = branch --no-merged master
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    wt    = worktree

    authors = "!f() { git log --no-merges --pretty='format:%<(26)%an <%ae>' --author \"$*\" | sort | uniq; }; f"
    by      = "!f() { IFS=$'\n'; select a in `git authors \"$*\"`; do git shortlog --author \"${a%%  *<*}\"; break; done; }; f"

    root = rev-parse --show-toplevel

    upstream = !git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
    upstream-remote = !git upstream | sed -e 's/\\/.*$//g'

    ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

    plog = "log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"

[advice]
    statusHints = no

[color]
    branch      = auto
    diff        = auto
    interactive = auto
    status      = auto
    ui          = auto

[color "diff"]
    frag       = 104
    func       = 74
    meta       = 137 bold
    new        = 114
    old        = 167
    plain      = 240
    whitespace = 24 24

[color "status"]
    header = 240
    branch = yellow
